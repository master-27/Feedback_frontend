import React, { useState,useEffect } from 'react';
import "../Css/Feedback.css"; // Import your CSS for styling
import'../index.css'
import Header from "../header";
import API_URLS from '../Apiconfig';
import { useLocation, useNavigate } from "react-router-dom";
function FeedbackForm(props) {
  const [feedback, setFeedback] = useState({
    Q1: 1,
    Q2: 1,
    Q3: 1,
    Q4: 1,
    Q5: 1,
    Q6: 1,
    Q7: 1,
    Q8: 1,
    Q9: 1,
    Q10: 1,
    overallRating: 1,
    comments: ''
  });
  const[studentId,setStudentId] = useState(null);
  const[subjectId,setSubjectId] = useState(null);
  const[teacherId,setTeacherId] = useState(null);
  const location = useLocation()
 
  useEffect(() => {
    if(location.state && location.state.studentId)
    setStudentId(location.state.studentId);
    else{
      console.log("No student id found");
    }
  }, [props.studentId]);
  useEffect(() => {
    if(location.state && location.state.subjectId)
    setSubjectId(location.state.subjectId);
    else{
      console.log("No student id found");
    }
  }, [props.subjectId]);

  useEffect(() => {
    if(location.state && location.state.teacherId)
    setTeacherId(location.state.teacherId);
    else{
    //   console.log("No student id found");
    }
  }, [props.teacherId]);

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFeedback((prevFeedback) => ({
      ...prevFeedback,
      [name]: value
    }));
  };

  const handleSubmit = (e) => {
    e.preventDefault();
  
    // Replace with your API endpoint
    const feedbackData = {
        studentId: studentId,  // Assuming studentId, subjectId, and teacherId are available from state
        subjectId: subjectId,
        teacherId: teacherId,
        Q1: feedback.Q1,
        Q2: feedback.Q2,
        Q3: feedback.Q3,
        Q4: feedback.Q4,
        Q5: feedback.Q5,
        Q6: feedback.Q6,
        Q7: feedback.Q7,
        Q8: feedback.Q8,
        Q9: feedback.Q9,
        Q10: feedback.Q10,
        Rating: feedback.overallRating,
        comments: feedback.comments
      };
    fetch(API_URLS.BASE_URL+API_URLS.STUDENT+"submitFeedback", {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(feedbackData)
    })
    .then(response => {
        if (response.ok) {
          // If the response is successful and no content is expected
          console.log('Feedback submitted successfully!');
          alert('Feedback submitted successfully!');
        } else {
          // Handle HTTP error responses (e.g., 4xx or 5xx status codes)
          console.error('Server responded with error:', response.status);
          alert('Duplicate Feedbacks are not allowed');
        }
      })
      .catch((error) => {
        // Handle network errors or other unexpected issues
        console.error('Error:', error);
        alert('An error occurred while submitting feedback.');
      });
  };

  return (
    <>
   
    <div className="feedback-form-container">
      <h1>Feedback Form</h1>
      <form onSubmit={handleSubmit}>
        <div className="question-group">
          <label>Q1: Knowledge base of the teacher 
        as perceived by you </label>
          <input required type="number" name="Q1" min="1" max="5" value={feedback.Q1} onChange={handleChange} />
        </div>
        <div className="question-group">
          <label>Q2: Communication skills in terms of articulation and comprehensibility </label>
          <input  required type="number" name="Q2" min="1" max="5" value={feedback.Q2} onChange={handleChange} />
        </div>
        <div className="question-group">
          <label>Q3: Sincerity / Commitment of the teacher in terms of preparedness and interest in taking classes </label>
          <input required type="number" name="Q3" min="1" max="5" value={feedback.Q3} onChange={handleChange} />
        </div>
        <div className="question-group">
          <label>Q4: Interest generated by the teacher in the class </label>
          <input required type="number" name="Q4" min="1" max="5" value={feedback.Q4} onChange={handleChange} />
        </div>
        <div className="question-group">
          <label>Q5: Ability to integrate course material with environment/other issues, to provide a 
broader perspective</label>
          <input required type="number" name="Q5" min="1" max="5" value={feedback.Q5} onChange={handleChange} />
        </div>
        <div className="question-group">
          <label>Q6: Accessibility and availability of the teacher in the department for academic 
consultations </label>
          <input  required type="number" name="Q6" min="1" max="5" value={feedback.Q6} onChange={handleChange} />
        </div>
        <div className="question-group">
          <label>Q7: Initiative  taken  in formulating topics/tests/assignments/examinations/seminars  and projects</label>
          <input required type="number" name="Q7" min="1" max="5" value={feedback.Q7} onChange={handleChange} />
        </div>
        <div className="question-group">
          <label>Q8: Regularity in taking classes </label>
          <input required type="number" name="Q8" min="1" max="5" value={feedback.Q8} onChange={handleChange} />
        </div>
        <div className="question-group">
          <label>Q9: Completion of the course in a thorough and satisfactory manner</label>
          <input required type="number" name="Q9" min="1" max="5" value={feedback.Q9} onChange={handleChange} />
        </div>
        <div className="question-group">
          <label>Q10:  Fairness in evaluating student performance and awarding grades. </label>
          <input required type="number" name="Q10" min="1" max="5" value={feedback.Q10} onChange={handleChange} />
        </div>
        <div className="question-group">
          <label>Overall Rating:</label>
          <input required type="number" name="overallRating" min="1" max="5" value={feedback.overallRating} onChange={handleChange} />
        </div>
        <div className="question-group">
          <label>Additional Comments:</label>
          <textarea name="comments" value={feedback.comments} onChange={handleChange} />
        </div>
        <button type="submit">Submit Feedback</button>
      </form>
    </div>
    </>
  );
}

export default FeedbackForm;
